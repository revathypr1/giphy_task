{"ast":null,"code":"var _jsxFileName = \"/home/revathy/Documents/react_project/giphy_react_task/src/compoents/Giphy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport { computeHeadingLevel, render } from \"@testing-library/react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Giphy = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const history = useHistory(); // const [IsLoading, setIsLoading] = useState(true);\n\n  const [IsError, setIsError] = useState(false);\n  console.log(\"giphy loading\");\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(true); // setIsLoading(false);\n\n      try {\n        const results = await axios(\"https://api.giphy.com/v1/gifs/trending\", {\n          params: {\n            api_key: \"9jfZlT5G25uLdVl95lYJ3Zr5hZxQcuXc\",\n            limit: 100\n          }\n        });\n        console.log(results);\n        setData(results.data.data);\n      } catch (err) {\n        setIsError(true);\n        setTimeout(() => setIsError(false), 4000);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const renderGifs = () => {\n    return data.map(el => {\n      var _el$images$original;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: (_el$images$original = el.images.original) === null || _el$images$original === void 0 ? void 0 : _el$images$original.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  const renderError = () => {\n    if (IsError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        classname: \"alert.alert-danger.alert-dismissible fade show \",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"error\",\n          children: \"unable to get gifs,please wait for few minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsError(false); // setIsLoading(false);\n\n    try {\n      const results = await axios(\"https://api.giphy.com/v1/gifs/search\", {\n        params: {\n          api_key: \"9jfZlT5G25uLdVl95lYJ3Zr5hZxQcuXc\",\n          q: search,\n          limit: 100\n        }\n      });\n      setData(results.data.data);\n    } catch (err) {\n      setIsError(true);\n      setTimeout(() => setIsError(false), 4000);\n    } // setIsLoading(false);\n\n  };\n\n  const logOut = e => {\n    e.preventDefault();\n    localStorage.clear();\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-2\",\n      children: [renderError(), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline justify-content-center m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          onChange: handleSearchChange,\n          type: \"text\",\n          placeholder: \"search\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          type: \"submit\",\n          className: \"btn btn-primary mx-2\",\n          children: \"Go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logOut,\n          className: \"btn btn-primary mx-2 \",\n          className: \"logout\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container gifs\",\n        children: renderGifs()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Giphy, \"GQlbS9CWg+9qyhpEAjkdkdqh4Lw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Giphy;\nexport default Giphy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Giphy\");","map":{"version":3,"sources":["/home/revathy/Documents/react_project/giphy_react_task/src/compoents/Giphy.js"],"names":["React","useEffect","useState","axios","Loader","computeHeadingLevel","render","Link","useHistory","Giphy","data","setData","search","setSearch","history","IsError","setIsError","console","log","fetchData","results","params","api_key","limit","err","setTimeout","renderGifs","map","el","images","original","url","id","renderError","handleSearchChange","event","target","value","handleSubmit","preventDefault","q","logOut","e","localStorage","clear","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"./Loader\";\r\nimport { computeHeadingLevel, render } from \"@testing-library/react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Giphy = () => {\r\n  const [data, setData] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n\r\n  // const [IsLoading, setIsLoading] = useState(true);\r\n  const [IsError, setIsError] = useState(false);\r\n  console.log(\"giphy loading\");\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(true);\r\n      // setIsLoading(false);\r\n\r\n      try {\r\n        const results = await axios(\"https://api.giphy.com/v1/gifs/trending\", {\r\n          params: {\r\n            api_key: \"9jfZlT5G25uLdVl95lYJ3Zr5hZxQcuXc\",\r\n            limit:100,\r\n          },\r\n        });\r\n        console.log(results);\r\n        setData(results.data.data);\r\n      } catch (err) {\r\n        setIsError(true);\r\n        setTimeout(() => setIsError(false), 4000);\r\n      }\r\n     \r\n    };\r\n    fetchData();\r\n  \r\n  }, []);\r\n\r\n  const renderGifs = () => {\r\n    return data.map((el) => (\r\n      <div key={el.id} className=\"gif\">\r\n        <img src={el.images.original?.url} />\r\n      </div>\r\n    ));\r\n  };\r\n  const renderError = () => {\r\n    if (IsError) {\r\n      return (\r\n        <div\r\n          classname=\"alert.alert-danger.alert-dismissible fade show \"\r\n          role=\"alert\"\r\n        >\r\n          <h3 className=\"error\">\r\n            unable to get gifs,please wait for few minutes\r\n          </h3>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const handleSearchChange = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsError(false);\r\n    // setIsLoading(false);\r\n    try {\r\n      const results = await axios(\"https://api.giphy.com/v1/gifs/search\", {\r\n        params: {\r\n          api_key: \"9jfZlT5G25uLdVl95lYJ3Zr5hZxQcuXc\",\r\n          q: search,\r\n          limit: 100,\r\n        },\r\n      });\r\n      setData(results.data.data);\r\n    } catch (err) {\r\n      setIsError(true);\r\n      setTimeout(()=> setIsError(false),4000);\r\n    }\r\n    // setIsLoading(false);\r\n  };\r\n\r\n  const logOut = (e) =>{\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    history.push(\"/\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"m-2\">\r\n        {renderError()}\r\n        <form className=\"form-inline justify-content-center m-2\">\r\n          <input\r\n            value={search}\r\n            onChange={handleSearchChange}\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            className=\"form-control\"\r\n          />\r\n          <button\r\n            onClick={handleSubmit}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary mx-2\"\r\n          >\r\n            Go\r\n          </button>\r\n        {/* </form> */}\r\n        <button\r\n          onClick={logOut}\r\n            className=\"btn btn-primary mx-2 \"\r\n            className=\"logout\"\r\n          >\r\n            Logout\r\n            </button>\r\n          </form>\r\n        <div className=\"container gifs\">\r\n          {renderGifs()}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Giphy;\r\n"]},"metadata":{},"sourceType":"module"}